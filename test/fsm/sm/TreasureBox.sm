%class TreasureBox
%start MapBox::Default
%package com.stone.sm
%import com.stone.sm.host.Human
%import com.stone.sm.host.StateMachineMessages
%import com.stone.sm.host.TreasureBox
%map MapBox
%%
// State
//	Transition		
//		End State	Action(s)

Start
Entry				{setState(StateMachineMessages.TreasureBoxState.TREASURE_BOX_START);}
{
	enterScene(sceneTime:long)
		Closed		{init(sceneTime);}
}

Closed
Entry				{setState(StateMachineMessages.TreasureBoxState.TREASURE_BOX_CLOSED);broadcastState();}
{
	open(human:Human)
		Opening		{openHandler(human);}
		
	sceneTimeOut
		End			{sceneTimeOutHandler();}
	clear
		End			{clearHandler();}
}

Opening 
Entry				{setState(StateMachineMessages.TreasureBoxState.TREASURE_BOX_OPENING);broadcastState();}
{
	close()
		Closed		{closeHandler();}
		
	pickUp(guid:long)
		nil			{pickUpHandler(guid);}
			
	sceneTimeOut
		End			{sceneTimeOutHandler();}
		
	clear
		End			{clearHandler();}
}

End
Entry				{setState(StateMachineMessages.TreasureBoxState.TREASURE_BOX_END);broadcastState();}
{}

Default
{
	start 
		Start		{}
}

%%