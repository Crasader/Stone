<?xml version="1.0" encoding="UTF-8"?>
<!-- server pack script  by crazyjohn -->
<project name="stone.build" basedir="." default="copy">
	<!-- define all props -->
	<tstamp>
		<format property="build.time" pattern="yyyyMMddHHmmss"/>
	</tstamp>
	<property name="build.version" value="${build.time}"/>
	<property name="root.dir" value="${basedir}"/>
	<property name="engine.dir" value="${root.dir}/../../"/>
	<property name="build.dir" value="${root.dir}/../build/mmo"/>
	<property name="class.dir" value="${build.dir}/classes"/>
	<property name="bin.dir" value="${build.dir}/bin"/>
	<property name="config.dir" value="${bin.dir}"/>
	<property name="lib.dir" value="${bin.dir}/lib"/>
	<property name="resource.dir" value="${build.dir}/resources/scripts"/>
	<property name="proto.dir" location="${engine.dir}/proto"/>
	<property name="core.dir" value="${engine.dir}/core"/>
	<property name="mmo.dir" value="${engine.dir}/mmo"/>
	<property name="ds.script.dir" value="${mmo.dir}/sql"/>
	
	<!-- path -->
	<path id="libs">
		<pathelement path="${java.class.path}"/>
		<fileset id="proto_lib" dir="${proto.dir}/lib" includes="*.jar"/>
		<fileset id="core_lib" dir="${core.dir}/lib" includes="*.jar,*.zip,*.dll,*.so"/>
	</path>

	<!-- java compile -->
	<presetdef name="javac17">
		<javac destdir="${class.dir}" classpathref="libs" nowarn="true" encoding="UTF-8" source="1.7" target="1.7" compiler="javac1.7"/>
	</presetdef>
	
	<!-- reset all local dirs  -->
	<target name="init">
		<delete dir="${build.dir}" failonerror="false"/>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${class.dir}"/>
		<mkdir dir="${bin.dir}"/>
		<mkdir dir="${config.dir}"/>
		<mkdir dir="${resource.dir}"/>
	</target>
	
	<!-- comile all projects code to same dir -->
	<target name="compile" depends="init" >
		<!--<echo message="compiling, classpath:${java.class.path}"/>-->
		<javac17>
			<src path="${proto.dir}/src"/>
			<src path="${core.dir}/src"/>
			<src path="${mmo.dir}/src"/>
		</javac17>
	</target>
	
	<!--compile aspect protjects-->
	<target name="compile.aspect" depends="compile">
		<iajc destdir="${class.dir}" showWeaveInfo="true" source="1.7" classpathRef="libs">
			<aspectpath> 
				<!-- Similar to classpath, aspectpath contains read-only, binary aspect libraries that are woven into sources but not included in the output. aspectpath accepts jar/zip files (but, unlike classpath, not directories).-->
				<!-- 可以设置aspect路径，但是只可以是jar包或者zip包 -->
			</aspectpath>
			<inpath>
				<!-- Read .class files for bytecode weaving from directories or zip files (like classpath).-->
				<!-- 可以设置class目录路径，适用于编译后植入 -->
				<!-- <pathelement location="${class.dir}"/> -->
			</inpath>
			<classpath>
				<!-- The classpath used by the sources being compiled. When compiling aspects, include the same version of the aspectjrt.jar.-->
				<pathelement location="${class.dir}"/>
			</classpath>
			<sourceroots>
				<!-- Directories containing source files (ending with .java or .aj) to compile.-->
				<!-- <pathelement location="${ds.dir}/src"/> -->
				<!-- <pathelement location="${gs.dir}/src"/> -->
				<!-- 用来放置aspectj以及目标工程的源码目录，适用于编译时植入 -->
				<pathelement location="${aspect.dir}/src"/>
			</sourceroots>
		</iajc>
	</target>
	
	<!-- to jar  -->
	<target name="pack" depends="compile">
		<copy todir="${class.dir}">
			<!--
			<fileset dir="${core.dir}/config"/>
			-->
			<fileset dir="${core.dir}/config" excludes="*.js,*.tpl"/>
			<fileset dir="${mmo.dir}/config" includes="*.xml" excludes="*.js,*.tpl"/>
		</copy>
		<jar basedir="${class.dir}" jarfile="${bin.dir}/mmo.jar"/>
		<delete dir="${class.dir}" failonerror="false"/>
	</target>
	
	<!-- copy jars and configs and resouces and launchScript to publish dir -->
	<target name="copy" depends="pack">
		<copy todir="${bin.dir}">
			<fileset dir="${core.dir}/config" excludes="*.tpl,*.properties"/>
			<fileset dir="${mmo.dir}/config" includes="*.js"/>
		</copy>
		<copy todir="${lib.dir}">
			<fileset refid="proto_lib"/>
			<fileset refid="core_lib"/>
		</copy>
		<copy todir="${resource.dir}">
			<fileset dir="${mmo.dir}/scripts" excludes=".*,**/test/"/>
		</copy>
		<!-- launcher -->
		<copy todir="${bin.dir}" file="${root.dir}/start/start.sh"/>
		<copy todir="${bin.dir}" file="${root.dir}/start/start.bat"/>
		<!--<echo message="ant -f bin\launch.xml" file="${build.dir}/runGameServer.bat"/> -->
	</target>
</project>